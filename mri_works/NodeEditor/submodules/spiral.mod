[diagram]
link=[N13] node=[C4:delta_x#Node#U0:delta_x]
link=[N12] node=[C3:xmax#Node#U0:xmax]
link=[N11] node=[C2:xmin#Node#U0:xmin]
link=[N10] node=[F0:out1#Node#C1:out1]
link=[N9] node=[F0:out0#Node#C0:out0]
link=[N8] node=[U5:multiplication#Node#F0:out1]
link=[N7] node=[U4:multiplication#Node#F0:out0]
link=[N6] node=[F0:in0#Node#U4:in2]
link=[N5] node=[F0:in0#Node#U5:in1]
link=[N1] node=[U3:sinus#Node#U5:in2]
link=[N4] node=[U2:cosinus#Node#U4:in1]
link=[N3] node=[F0:in0#Node#U3:x]
link=[N2] node=[F0:in0#Node#U2:x]
link=[N0] node=[U0:outAbscissa#Node#F0:in0]
link=[N14] node=[C5:angle_type#Node#U2:angle_type]
link=[N15] node=[C5:angle_type#Node#U3:angle_type]
block=[U5] category=[Tools.SimpleOperation] class=[mult_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N5)', 'Node(N1)'], ['multiplication'], ['float'])] RectF=[(81.0, 35.0, 150.0, 80.0)]
block=[U4] category=[Tools.SimpleOperation] class=[mult_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N4)', 'Node(N6)'], ['multiplication'], ['float'])] RectF=[(71.0, -141.0, 150.0, 80.0)]
block=[U3] category=[Numpy.Functions_trigo] class=[numpy_sin] valInputs=[(['x', 'angle_type'], ['Node(N3)', 'Node(N15)'], ['sinus'], ['float'])] RectF=[(-295.7035859775117, 84.48046588955995, 150.0, 80.0)]
block=[U2] category=[Numpy.Functions_trigo] class=[numpy_cos] valInputs=[(['x', 'angle_type'], ['Node(N2)', 'Node(N14)'], ['cosinus'], ['float'])] RectF=[(-254.18405186707153, -166.79966722174294, 151.734375, 80.0)]
connt=[C4] name=[delta_x] type=[in] format=[float] valOut=[1.0] RectF=[(-793.4065983980241, 71.16109229828118, 70, 24)]
connt=[C3] name=[xmax] type=[in] format=[float] valOut=[10.0] RectF=[(-793.4065983980241, -3.5055743683854885, 70, 24)]
connt=[C2] name=[xmin] type=[in] format=[float] valOut=[0.0] RectF=[(-793.4065983980241, -78.17224103505215, 70, 24)]
connt=[C1] name=[out1] type=[out] format=[list_float] RectF=[(493.65022313119096, 56.38467142382814, 70, 24)]
connt=[C0] name=[out0] type=[out] format=[list_float] RectF=[(497.5897418247108, -90.15908677749573, 70, 24)]
block=[U0] category=[Generator.Abscissa] class=[AbsX] valInputs=[(['xmin', 'xmax', 'delta_x'], ['Node(N11)', 'Node(N12)', 'Node(N13)'], ['outAbscissa'], ['list_float'])] RectF=[(-593.4065983980241, -43.50557436838549, 158.390625, 80.0)]
loopFor=[F0] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[[['out0', 'in', 'float'], ['out0', 'out', 'list_float']], [['out1', 'in', 'float'], ['out1', 'out', 'list_float']]]] listItems=[['U4', 'U3', 'U2', 'U5']] RectF=[(-383.82411842272296, -220.0, 704.4702663261584, 433.7288094369451)]
connt=[C5] name=[angle_type] type=[in] format=[str] valOut=[enumerate(('degree','radian'))] RectF=[(-798.3691484850351, 159.682360175538, 70, 24)]
[execution]
['C2:xmin=', 'C3:xmax=', 'C4:delta_x=', 'C5:angle_type=']
['U0', 'F0']
{'U0': ('Generator.Abscissa', 'AbsX', "(['xmin', 'xmax', 'delta_x'], ['C2:xmin', 'C3:xmax', 'C4:delta_x'], ['outAbscissa'], ['list_float'])")}
['C5:angle_type', 'C5:angle_type', 'U0:outAbscissa', 'F0:in0', 'F0:in0', 'F0:in0', 'F0:in0', 'F0:out0', 'F0:out1', 'C2:xmin', 'C3:xmax', 'C4:delta_x']
{}
['C0:out0=F0:out0', 'C1:out1=F0:out1']
[loopfor F0]
['F0:in0=U0:outAbscissa']
['ThreadOn', 'U2', 'U3', 'ThreadOff', 'ThreadOn', 'U4', 'U5', 'ThreadOff']
{'U2': ('Numpy.Functions_trigo', 'numpy_cos', "(['x', 'angle_type'], ['F0:in0', 'C5:angle_type'], ['cosinus'], ['float'])"), 'U3': ('Numpy.Functions_trigo', 'numpy_sin', "(['x', 'angle_type'], ['F0:in0', 'C5:angle_type'], ['sinus'], ['float'])"), 'U4': ('Tools.SimpleOperation', 'mult_float_dyn', "(['in1', 'in2'], ['U2:cosinus', 'F0:in0'], ['multiplication'], ['float'])"), 'U5': ('Tools.SimpleOperation', 'mult_float_dyn', "(['in1', 'in2'], ['F0:in0', 'U3:sinus'], ['multiplication'], ['float'])")}
['C5:angle_type', 'C5:angle_type', 'F0:in0', 'F0:in0', 'U2:cosinus', 'U3:sinus', 'F0:in0', 'F0:in0', 'U4:multiplication', 'U5:multiplication']
{}
['F0:out0=U4:multiplication', 'F0:out1=U5:multiplication']
