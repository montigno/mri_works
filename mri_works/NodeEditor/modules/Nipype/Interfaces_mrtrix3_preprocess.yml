mrtrix3_DWIDenoise:
  args: '' # (a unicode string) Additional parameters to the command. argument ``%s``
  bval_scale: enumerate(('yes','no')) # ('yes' or 'no') specifies whether the b - values should be scaled by the square of the corresponding DW gradient norm, as often required for multishell or DSI DW acquisition schemes. The default action can also be set in the MRtrix config file, under the BValueScaling entry. Valid choices are yes / no, true / false, 0 / 1 (default: true). argument ``-bvalue_scaling %s``
  environ: {} # (a dictionary with keys which are a bytes or None or a value of class 'str' and with values which are a bytes or None or a value of class 'str', nipype default value: {}). Environment variables
  extent: (5, 5, 5) # a tuple of the form: (an integer (int or long), an integer (int or long), an integer (int or long))) set the window size of the denoising filter. (default = 5,5,5). argument ``-extent %d,%d,%d``
  grad_file: 'path' # (an existing file name) dw gradient scheme (MRTrix format. argument ``-grad %s``
  grad_fsl: 'path' # (a tuple of the form: (an existing file name, an existing file name)) (bvecs, bvals) dw gradient scheme (FSL format). argument: ``-fslgrad %s %s``
  in_bval: 'path' # (an existing file name) bvals file in FSL format
  in_bvec: 'path' # (an existing file name) bvecs file in FSL format. argument ``-fslgrad %s %s``
  mask: 'path' # (an existing file name) mask image. argument ``-mask %s``, position 1
  noise: 'path' # (a file name) noise map. argument: ``-noise %s``
  nthreads: 0 # (an integer (int or long)) number of threads. if zero, the number of available cpus will be used. argument ``-nthreads %d``
  out_file: 'path' # (a file name) the output denoised DWI image. argument ``%s``, position -1
