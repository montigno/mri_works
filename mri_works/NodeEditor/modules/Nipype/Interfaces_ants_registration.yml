ants_MeasureImageSimilarity:
  args: '' # (a unicode string). Additional parameters to the command. argument: ``%s``.
  dimension: 2 # (2 or 3 or 4). Dimensionality of the fixed/moving image pair. argument: ``--dimensionality %d``, position: 1.
  environ: {} # (a dictionary with keys which are a bytes or None or a value of class 'str' and with values which are a bytes or None or a value of class 'str', nipype default value: {}). Environment variables.
  fixed_image_mask: 'path' # (an existing file name). mask used to limit metric sampling region of the fixed image. argument: ``%s``.
  metric_weight: 1.0 # (a float, nipype default value: 1.0). The "metricWeight" variable is not used. requires: metric.
  moving_image_mask: 'path' # (an existing file name). mask used to limit metric sampling region of the moving image. requires: fixed_image_mask.
  num_threads: 1 # (an integer (int or long), nipype default value: 1). Number of ITK threads to use.
  sampling_strategy: enumerate(('None', 'Regular', 'Random')) # sampling_strategy: ('None' or 'Regular' or 'Random', nipype default value: None). Manner of choosing point set over which to optimize the metric. Defaults to "None" (i.e. a dense sampling of one sample per voxel). requires: metric.
ants_Registration:
  args: '' # (a unicode string). Additional parameters to the command. argument: ``%s``.
  collapse_output_transforms: True # (a boolean, nipype default value: True). Collapse output transforms. Specifically, enabling this option combines all adjacent linear transforms and composes all adjacent displacement field transforms before writing the results to disk. argument ``--collapse-output-transforms %d``
  convergence_threshold: [1.e-8, 1.e-9] # (a list of at least 1 items which are a float, nipype default value: [1e-06]). requires: number_of_iterations.
  convergence_window_size: [10] # (a list of at least 1 items which are an integer (int or long), nipype default value: [10]). requires: convergence_threshold.
  dimension: 3 # (3 or 2, nipype default value: 3). image dimension (2 or 3). argument ``--dimensionality %d``.
  environ: {} # (a dictionary with keys which are a bytes or None or a value of class 'str' and with values which are a bytes or None or a value of class 'str', nipype default value: {}). Environment variables.
  fixed_image_mask: 'path' # (an existing file name). Mask used to limit metric sampling region of the fixed imagein all stages. argument: ``%s``. mutually_exclusive: fixed_image_masks.
  fixed_image_masks: ['path'] # (a list of items which are an existing file name or 'NULL'). Masks used to limit metric sampling region of the fixed image, defined per registration stage (Use "NULL" to omit a mask at a given stage), mutually_exclusive: fixed_image_mask.
  float: False # (a boolean). Use float instead of double for computations. argument ``--float %d``.
  initial_moving_transform: ['path'] # 
  initial_moving_transform_com: 0 # 
  initialize_transforms_per_stage: False # 
  interpolation: enumerate(('Linear', 'NearestNeighbor', 'CosineWindowedSinc', 'WelchWindowedSinc', 'HammingWindowedSinc', 'LanczosWindowedSinc', 'BSpline', 'MultiLabel', 'Gaussian')) # 
  interpolation_parameters: (1.0, 1.0) # 
  invert_initial_moving_transform: [False, False] # 
  metric_item_trait: enumerate(('CC', 'MeanSquares', 'Demons', 'GC', 'MI', 'Mattes')) # 
  metric_stage_trait: enumerate(('CC', 'MeanSquares', 'Demons', 'GC', 'MI', 'Mattes')) # 
  metric_weight_item_trait: 1.0 # 
  metric_weight_stage_trait: [0.0] # 
  moving_image_mask: 'path' # 
  moving_image_masks: ['path'] # 
  num_threads: 1 # 
  number_of_iterations: [[1500, 200], [100, 50, 30]] # 
  output_inverse_warped_image: 'path' # 
  output_transform_prefix: '' # 
  output_warped_image: 'path' # 
  radius_bins_item_trait: 5 # 
  radius_bins_stage_trait: [0] # 
  radius_or_number_of_bins: [5] # 
  restore_state: 'path' # 
  restrict_deformation: [[0,1]] # 
  sampling_percentage: [0.05, [0.05, 0.10]] # 
  sampling_percentage_item_trait: 0.0 # 
  sampling_percentage_stage_trait: [0.0] # 
  sampling_strategy: ['Random', None] # 
  sampling_strategy_item_trait: enumerate(('None', 'Regular', 'Random')) # 
  sampling_strategy_stage_trait: enumerate(('None', 'Regular', 'Random')) # 
  save_state: 'path' # 
  sigma_units: ['vox', 'mm'] # 
  transform_parameters: [(2.0, 0.0), (0.25, 3.0, 0.0)] # 
  use_estimate_learning_rate_once: [True, True] # 
  use_histogram_matching: [True, True] # 
  verbose: False # 
  winsorize_lower_quantile: 0.0 # 
  winsorize_upper_quantile: 1.0 # 
  write_composite_transform: False # 