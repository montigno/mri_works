nipy_FmriRealign4d:
  between_loops: [5] # (a list of items which are an integer (int or long), nipype default value: [5]), loops used to realign different runs
  ignore_exception: False # (a boolean, nipype default value: False). Print an error message instead of throwing an exception in case the interface fails to run
  loops: [5] # (a list of items which are an integer (int or long), nipype default value: [5]), loops within each run
  slice_order: [0] # (a list of items which are an integer (int or long)), 0 based slice order. This would be equivalent to enteringnp.argsort(spm_slice_order) for this field. This effectsinterleaved acquisition. This field will be deprecated infuture Nipy releases and be replaced by actual sliceacquisition times. requires: time_interp
  speedup: [5] # (a list of items which are an integer (int or long), nipype default value: [5]) successive image sub-sampling factors for acceleration
  start: 0.0 # (a float, nipype default value: 0.0) time offset into TR to align slices to
  time_interp: True # (True) Assume smooth changes across time e.g., fmri series. If you don't want slice timing correction set this to undefined. requires: slice_order
  tr_slices: 0.0 # (a float) TR slices. requires: time_interp
nipy_SpaceTimeRealigner:
  slice_info: 2 # (an integer (int or long) or a list of items which are any value). Single integer or length 2 sequence If int, the axis in `images` that is the slice axis. In a 4D image, this will often be axis = 2. If a 2 sequence, then elements are ``(slice_axis, slice_direction)``, where ``slice_axis`` is the slice axis in the image as above, and ``slice_direction`` is 1 if the slices were acquired slice 0 first, slice -1 last, or -1 if acquired slice -1 first, slice 0 last. If `slice_info` is an int, assume ``slice_direction`` == 1. requires: slice_times
  slice_times: enumerate(('asc_alt_2', 'asc_alt_2_1', 'asc_alt_half', 'asc_alt_siemens', 'ascending', 'desc_alt_2', 'desc_alt_half', 'descending')) # (a list of items which are a float or 'asc_alt_2' or 'asc_alt_2_1' or 'asc_alt_half' or 'asc_alt_siemens' or 'ascending' or 'desc_alt_2' or 'desc_alt_half' or 'descending'). Actual slice acquisition times.
  tr: 1.0 # (a float) TR in seconds. requires slice_times
nipy_Trim:
  begin_index: 0 # (an integer (int or long), nipype default value: 0) first volume
  end_index: 0 # (an integer (int or long), nipype default value: 0) last volume indexed as in python (and 0 for last)
  ignore_exception: False # (a boolean, nipype default value: False) Print an error message instead of throwing an exception in case the interface fails to run
  out_file: 'path' # (a file name) output filename
  suffix: '_trim' # (a string, nipype default value: _trim) suffix for out_file to use if no out_file provided