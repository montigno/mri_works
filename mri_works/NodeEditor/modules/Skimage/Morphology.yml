skimage_erosion:
  selem: [[0.0]]
  out: [[0.0]]
  shift_x: False
  shift_y: False
skimage_dilation:
  selem: [[0.0]]
  out: [[0.0]]
  shift_x: False
  shift_y: False
skimage_white_tophat:
  selem: [[0.0]]
  out: [[0.0]]
skimage_black_tophat:
  selem: [[0.0]]
  out: [[0.0]]
skimage_opening:
  selem: [[0.0]] #The neighborhood expressed as an array of 1’s and 0’s. If None, use cross-shaped structuring element (connectivity=1).
  out: [[0.0]] #The array to store the result of the morphology. If None is passed, a new array will be allocated.
skimage_closing:
  selem: [[0.0]]
  out: [[0.0]]
remove_small_objects:
  out: [[0.0]]
  connectivity: 1
  in_place: False
remove_small_holes:
  out: [[0.0]]
  connectivity: 1
  in_place: False
skimage_convex_hull_image:
  offset_coordinates: False # If True, a pixel at coordinate, e.g., (4, 7) will be represented by coordinates (3.5, 7), (4.5, 7), (4, 6.5), and (4, 7.5). This adds some “extent” to a pixel when computing the hull.
  tolerance: 0.0 # Tolerance when determining whether a point is inside the hull. Due to numerical floating point errors, a tolerance of 0 can result in some points erroneously being classified as being outside the hull.