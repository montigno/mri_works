[diagram]
constant=[A0] value=['*.nii'] format=[str] label=[extension] RectF=[(-493.2592911654902, 110.95561364420327, 49.0, 33.0)]
constant=[A1] value=['Choose Nifti files'] format=[str] label=[title] RectF=[(-554.5435827598811, 189.2509769792022, 120.0, 33.0)]
link=[N8] node=[S0:TI_files#Node#P5:Length]
link=[N7] node=[S0:TI_files#Node#P4:Value]
link=[N3] node=[S0:TR_files#Node#P2:Value]
link=[N2] node=[S0:TE_files#Node#P1:Length]
link=[N1] node=[S0:TE_files#Node#P0:Value]
link=[N0] node=[U0:filesPath#Node#S0:list_files]
link=[N4] node=[A0:#Node#U0:extension]
link=[N5] node=[A1:#Node#U0:title]
link=[N6] node=[S0:TR_files#Node#P3:Length]
probe=[P5] label=[Length] format=[list_path] RectF=[(464.1738426546341, 266.5826838223811, 70, 24)]
probe=[P4] label=[Value] format=[list_path] RectF=[(463.3121038011702, 219.2917696774603, 70, 24)]
probe=[P2] label=[Value] format=[list_path] RectF=[(464.44035453772597, 96.91138086855646, 70, 24)]
probe=[P1] label=[Length] format=[list_path] RectF=[(460.89322597540405, 45.199408626045425, 70, 24)]
probe=[P0] label=[Value] format=[list_path] RectF=[(461.4934690955713, -11.048483624800163, 70, 24)]
script=[S0] title=[Script_editor] inputs=[['list_files', 'in', 'list_path']] outputs=[['TE_files', 'out', 'list_path'], ['TR_files', 'out', 'list_path'], ['TI_files', 'out', 'list_path']] code=[your code] RectF=[(-70.08084366633612, -61.12211384344104, 427.74184765721657, 410.7171933827005)]
block=[U0] category=[File_IO.Dialog_files_directories] class=[Choose_multi_files] valInputs=[(['filesDefault', 'extension', 'title'], [['path'], 'Node(N4)', 'Node(N5)'], ['filesPath', 'numberOfFiles'], ['list_path', 'int'])] RectF=[(-360.75243535545684, 118.12877380424986, 206.59375, 80.0)]
probe=[P3] label=[Length] format=[list_path] RectF=[(465.67795623067275, 160.3239320387065, 70, 24)]
comments=[] RectF=[(-95.50425685442485, -103.29196499671002, 489.2498180956589, 485.39984514737654)] text=['This script selects \nthe sequences which\nhave multiple echo times.']
comments=[] RectF=[(-743.934770528561, -38.451726745478695, 570.2980824317729, 10.0)] text=['1 - run Pipeline (Ctrl + t)\n2 - choose multiple Nifti files, and click ok\n3 - go to the terminal, you will see selected files']
[source S0]
['list_files=U0:filesPath']
import os
import json

TE_files, TR_files, TI_files = [], [], []
 
for fs in list_files:
    tmp = fs.replace('.nii','.json')
    if os.path.exists(tmp):
        with open(tmp) as f0:
            data = json.load(f0)
        try:
            tft = data["EchoTime"]['value']
            if len(tft) > 2:
                TE_files.append(fs)
        except Exception as e:
            pass
        try:
            tft = data["RepetitionTime"]['value']
            if len(tft) > 2:
                TR_files.append(fs)
        except Exception as e:
            pass
        try:
            tft = data["InversionTime"]['value']
            if len(tft) > 2:
                TI_files.append(fs)
        except Exception as e:
            pass
['S0:TE_files', 'S0:TR_files', 'S0:TI_files']
[/source S0]

[execution]
[]
['U0', 'S0', 'P5', 'P4', 'P2', 'P1', 'P0', 'P3']
{'U0': ('File_IO.Dialog_files_directories', 'Choose_multi_files', "(['filesDefault', 'extension', 'title'], [['path'], '*.nii', 'Choose Nifti files'], ['filesPath', 'numberOfFiles'], ['list_path', 'int'])"), 'P3': ('list_path', 'Length', 'S0:TR_files'), 'P0': ('list_path', 'Value', 'S0:TE_files'), 'P1': ('list_path', 'Length', 'S0:TE_files'), 'P2': ('list_path', 'Value', 'S0:TR_files'), 'P4': ('list_path', 'Value', 'S0:TI_files'), 'P5': ('list_path', 'Length', 'S0:TI_files')}
['S0:TR_files', 'A1:', 'A0:', 'U0:filesPath', 'S0:TE_files', 'S0:TE_files', 'S0:TR_files', 'S0:TI_files', 'S0:TI_files']
{}
[]
